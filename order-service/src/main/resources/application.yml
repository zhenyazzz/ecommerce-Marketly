spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/order_db
    username: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: update # Для разработки (в продакшене используйте validate)
    show-sql: true
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
server:
  port: 8082
  
feign:
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 3000

resilience4j.retry:
  instances:
    productService:
      max-attempts: 3
      wait-duration: 500ms

resilience4j.circuitbreaker:
  instances:
    productService:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10s

kafka:
  bootstrap-servers: localhost:9092
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: order-service-group
      properties:
        spring.json.trusted.packages: "*"